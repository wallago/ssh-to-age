name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    name: Rust CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup install nightly
          rustup default nightly
      - name: Build
        run: cargo build --verbose
      - name: Lint with Clippy
        run: "cargo clippy --all-targets --all-features -- -D warnings -W clippy::all -W clippy::pedantic -W clippy::nursery -W clippy::perf -W clippy::complexity -W clippy::suspicious -W clippy::style -W clippy::correctness"
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Run tests (debug)
        run: cargo test --all-targets --all-features
      - name: Run tests (release)
        run: cargo test --release --all-targets --all-features
      - name: Check Formatting
        run: cargo fmt --check
